The Strategy Pattern defines a family of algorithms,
encapsulates each one, and makes them interchangeable. Strategy
lets the algorithm vary independently from clients that use it.

How do I use the Strategy pattern?
fitst, Separating what behaviors change from what stay the same
second, creating classes for the behaviors that vary across the classes
and the super class will composite those behavior classes and each class will choose the behavior that matches him

why shouldn't use the inheritence instead of this pattern?
the subclasses behavior keeps changing, and itâ€™s not appropriate for all
subclasses to have the behaviors of the superclass.